import pprint
pp = pprint.PrettyPrinter(width=41, compact=True)
import subprocess as sp
import tempfile
import yaml
import json
import string
import itertools
import time

git_dir = config['git_dir']
bustools_path = config['bustools_path']
working_dir = config['working_dir']
conda_dir = config['conda_dir']
fastq_path = config['fastq_path']
fi_tsne_dir = config['fi_tsne_dir']
quant_path = config['quant_path']
config_abspath=config['config_abspath']

dist = [0.001,0.1,0.2,0.3]
method = ['bbknn','insct','magic', 'scVI','scVIprojection','scVIprojectionSO','CCA', 'scanorama', 'harmony', 'fastMNN', 'combat', 'none', 'liger']
transform = ['libSize', 'sqrt', 'counts','standard', 'SCT','scran']
covariate = ['study_accession', 'batch']
organism = ['Mus_musculus', 'Macaca_fascicularis', 'Homo_sapiens', 'all']
combination = ['Mus_musculus', 'Mus_musculus_Macaca_fascicularis', 'Mus_musculus_Macaca_fascicularis_Homo_sapiens', 'universe']
dims = [4,6,8,10,20,25,30,50,75,100,200]
knn = [0.2,0,4,0.6, 5, 7, 10, 15]
neighbors = [500, 50]
model = ['A', 'B', 'C', 'D', 'E', 'F', 'G'] # A is ~seuratCluster+batch+percent.mt and B is ~seuratCluster+batch+percent.mt+organism
wildcard_constraints:
	method = '|'.join(method),
	transform = '|'.join(transform),
	covariate = '|'.join(covariate),
	organism = '|'.join(organism),
	nfeatures = '|'.join([str(x) for x in [2000,5000]]),
	dims = '|'.join([str(x) for x in dims]),
	model = '|'.join(model),	
	dist = '|'.join([str(x) for x in dist]),
	neighbors = '|'.join([str(x) for x in neighbors])

rule all:
	input:
	#	expand('trajectory_slingshot/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__dist-{dist}__neighbors-{neighbors}__knn-{knn}__traj{organism}.Rdata',
	#		n_features = config['n_features'], \
	#		transform = ['counts'], \
	#		partition = ['universe'], \
	#		covariate = ['batch'], \
	#		method = ['scVIprojectionSO'], \
	#		dims = config['dims'], \
	#		dist = config['dist'], \ 
	#		knn = config['knn'], \
	#		neighbors = config['neighbors'], \
	#		organism = ['Homo_sapiens','Mus_musculus']), 
		'site/scEiaD_all_seurat_v3.Rdata'
	
# take winner params from SnakePOP
# and rebuild latent dims
# SO means save the scVI model and  created anndata object
ref_samples = config['ref_samples']
pattern_file=config['samplename_patterns']
rule rebuild_scVI_data:
	input:
		existing = 'seurat_obj/raw/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__preFilter.seuratV3.Rdata',
	output:
		seurat = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata',
		model = directory('scVIprojectionSO_scEiaD_model/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}'),
		h5ad = 'site/scVIprojectionSO_anndata/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}.h5ad'
	params:
		epochs = config['epochs']
	shell:
		"""
		module load R/3.6
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		cmd="Rscript {git_dir}/src/merge_methods.R \
				 {wildcards.method} \
				 {wildcards.transform} \
				 {wildcards.covariate} \
				 {wildcards.dims} \
				 {input} \
				 {output.seurat} \
				 {params.epochs} \
				 {pattern_file} \
				 {ref_samples} \
				 {output.model} \
				 {output.h5ad} "

		echo $cmd
		eval $cmd
		"""

#rule project_scVI_onto_all_data:
#	input:
#		existing = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata',
#		model = 'scVIprojectionSO_scEiaD_model/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}'
#	output:
#		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDprojected.seuratV3.Rdata'		
#	shell:
#		"""
#		module load R/3.6
#		export SCIAD_CONDA_DIR={conda_dir}
#		export SCIAD_GIT_DIR={git_dir}
#		export SCIAD_CONFIG={config_abspath}
#		export SCIAD_WORKING_DIR={working_dir}
#		Rscript {git_dir}/src/project_scVI_onto_all_data.R {input} None {output} integrated_obj 
#		"""



rule calculate_umap:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata'
	output:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umap.Rdata'
	threads: 4
	shell:
		"""
		module load R/3.6
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		Rscript {git_dir}/src/calculate_umap_and_cluster.R \
			{wildcards.method} {wildcards.dims} {wildcards.dist} {wildcards.neighbors} 1 FALSE TRUE {input} {output}
		"""

rule calculate_cluster:
	input:
		obj = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata'
	output:
		temp('seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.cluster.seuratV3.Rdata')
	shell:
		"""
		module load R/3.6.3
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		Rscript {git_dir}/src/calculate_umap_and_cluster.R \
			{wildcards.method} {wildcards.dims} 1 1 {wildcards.knn} TRUE FALSE {input} {output}
		"""

def set2mapper(set):
	if set == 'Homo_sapiens':
		return 'references/gtf/hs-homo_sapiens_anno.gtf.gz'
	elif set == 'Mus_musculus':
		return 'references/gtf/mm-mus_musculus_anno.gtf.gz'
	else:
		return 'references/ENSG2gene_name.tsv.gz'

rule extract_umap:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata',
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umap.Rdata',
		'cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-' + config['knn'] + '.cluster.Rdata',
		'pipeline_data/cell_info/cell_info_labelled.Rdata'
		#'predictions/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD_cell_info_predictions.Rdata'
	output:
		'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umap.Rdata'
	shell:
		"""
		module load R/3.6
		Rscript {git_dir}/src/extract_umap_SCEIAD.R \
			{input} {output} {wildcards.method} UMAP
		"""

rule extract_cluster:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.cluster.seuratV3.Rdata'
	output:
		'cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.cluster.Rdata',
		'cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.graph.Rdata'
	shell:
		"""
		module load R/3.6
		mkdir -p cluster
		Rscript {git_dir}/src/extract_cluster.R \
			{input} {output}
		"""

rule celltype_predict_VS_xgboost:
	input:
		('seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata'),
		'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umapFilter.Rdata'
	output:
		pred = 'predictions/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.Rdata',
		umap = 'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umapFilter.predictions.Rdata',
		model = 'xgboost_model/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.pickle'
	params:
		model = 'xgboost_model/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}'
	shell:
		"""
		module load R/3.6
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		export SCIAD_WORKING_DIR={working_dir}
		Rscript {git_dir}/src/celltype_predict_wrapper.R {input} {output.pred} {output.umap} CellTypeID CellType {params.model}
		"""

rule doublet_ID:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata'
	output:
		'doublet_calls/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}.doublets.Rdata'
	shell:
		"""
		module load R/3.6
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		Rscript {git_dir}/src/doublet_ID.R {input} {output}
		"""

rule calculate_phate:
	input:
		obj = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata'
	output:
		'phate/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.phate.Rdata'
	threads: 16
	shell:
		"""
		module load R/3.6
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		Rscript {git_dir}/src/run_phate.R {input} {output}
		"""

#slingshot trajectory
rule sling:
	input:
		'cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.cluster.Rdata',
		'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umapFilter.predictions.Rdata',
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.seuratV3.Rdata'
	output:
		'trajectory_slingshot/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__dist-{dist}__neighbors-{neighbors}__knn-{knn}__traj{organism}.Rdata'
	shell:
		"""
		module load R/4.0
		Rscript {git_dir}/src/trajectory_sling.R {input} {wildcards.method} {wildcards.organism} {output}
		"""

rule doublet_filtering:
	input:
		'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umap.Rdata',
		'doublet_calls/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}.doublets.Rdata'
	output:
		'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umapFilter.Rdata'
	shell:
		"""
		module load R/3.6
		Rscript {git_dir}/src/doublet_filtering.R {input} {output}
		"""

# Add back genes that were removed becauase they  only were expressed in 1-2 species
# or the gene name could not be properly matched (and thus *looked* like only in one?)
# we are only doing protein coding for the additions
		
rule add_missing_genes:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umap.Rdata'
	output:
		missing_quant = 'pipeline_data/clean_quant/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}_dist-{dist}__neighbors-{neighbors}_missing_quant.Rdata',
		full_map = 'pipeline_data/clean_quant/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__dist-{dist}__neighbors-{neighbors}_missing_quant_full_map.Rdata',
		seurat = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}.umap.Rdata'
	shell:
		"""
		module load R/4.0.3
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		export SCIAD_WORKING_DIR={working_dir}
		Rscript {git_dir}/src/add_all_genes.R {input} {output}
		"""
##################

rule make_sqlite:
	input:
		seurat = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}.umap.Rdata',
		meta = 'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umapFilter.predictions.Rdata',
		cluster = 'cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.cluster.Rdata',
		#well_data =  'well_data_seurat_obj_labelled.Rdata',
		phate = 'phate/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD.phate.Rdata'
	params:
		'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{dist}-{neighbors}-{knn}.sqlite'
	output:
		'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{dist}-{neighbors}-{knn}.sqlite'
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/make_sqlite.R \
			{input.seurat} \
			{input.meta} \
			{input.cluster} \
			{input.phate} \
			{output} \
			{wildcards.correction}
		#pigz -p 32 {params}
		"""

rule haystack:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}.umap.Rdata'	
	output:
		'haystack/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__dist-{dist}__neighbors-{neighbors}.haystack.Rdata'
	shell:
		"""
		mkdir -p haystack
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/haystack.R \
			{input} \
			max \
			{output}
		"""

rule pseudoBulk_DGE_buildObj:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}.umap.Rdata',
		'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umapFilter.predictions.Rdata',
		'cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.cluster.Rdata'	
		#'well_data_seurat_obj_labelled.Rdata'
	output:
		'pseudoBulk_DGE/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}__knn-{knn}__{pseudoTest}__edgeR_obj.Rdata'
	threads: 24 
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/4.0
		Rscript {git_dir}/src/pseudoBulk_buildObj.R {input} {wildcards.pseudoTest} {output}		
		"""
rule diff_test_wilcox:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}.umap.Rdata',
		'cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__knn-{knn}.cluster.Rdata',
		'umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}.umapFilter.predictions.Rdata',
	output:
		'diff_testing/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__knn-{knn}__neighbors-{neighbors}__dist-{dist}__{group}.sceWilcox.Rdata',
		'diff_testing/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__knn-{knn}__neighbors-{neighbors}__dist-{dist}__{group}.sceWilcox_summary.Rdata'
	threads: 12
	shell:
		"""
		module load R/3.6
		Rscript {git_dir}/src/diff_testing_sce_wilcox.R {input} {wildcards.group} {threads} {output}
		"""

rule pseudoBulk_DGE_difftest:
	input:
		'pseudoBulk_DGE/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}__knn-{knn}__{pseudoTest}__edgeR_obj.Rdata'
	output:
		'pseudoBulk_DGE/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}__knn-{knn}__{pseudoTest}__{piece}.Rdata'
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/4.0
		Rscript {git_dir}/src/pseudoBulk_diff_testing.R {input} {wildcards.pseudoTest} {wildcards.piece} {output}		
		"""
	
rule merge_pseudoBulk_against:
	input:
		pseudoBulk = expand('pseudoBulk_DGE/n_features-{{n_features}}__transform-{{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__dims-{{dims}}__preFilter.scEiaDMA__dist-{{dist}}__neighbors-{{neighbors}}__knn-{{knn}}__{pseudoTest}__{piece}.Rdata', pseudoTest = ['A1','A3','B1','B3','C1','C3'], piece = range(1,26)),
	output:
		'pseudoBulk_DGE/merge/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}__knn-{knn}__ABC.Rdata'
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/pseudoBulk_merge.R {input[0]} {output}
		"""

rule merge_pseudoBulk_pairwise:
	input:
		pseudoBulk = expand('pseudoBulk_DGE/n_features-{{n_features}}__transform-{{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__dims-{{dims}}__preFilter.scEiaDMA__dist-{{dist}}__neighbors-{{neighbors}}__knn-{{knn}}__{pseudoTest}__{piece}.Rdata', pseudoTest = ['A2','B2','C2'], piece = range(1,501))
	output:
		'pseudoBulk_DGE/merge/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaDMA__dist-{dist}__neighbors-{neighbors}__knn-{knn}__pairwise.Rdata'
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/pseudoBulk_merge.R {input[0]} {output}
		"""


rule sqlite_add_tables:
	input:
		sqlite = 'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{dist}-{neighbors}-{knn}.sqlite',
		#diff_wilcox = expand('diff_testing/{{combination}}__{{n_features}}__{transform-{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__dims-{{dims}}__neighbors-{{neighbors}}__dist-{{dist}}__{group}.sceWilcox.Rdata', \
		#			group = ['subcluster', 'cluster','CellType_predict','CellType']),
		#diff_glm = expand('diff_testing/{{combination}}__{{n_features}}__{transform-{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__{{dims}}__dist-{{dist}}__{{neighbors}}.{model}.diff.coef_table.Rdata', \
		#			model = ['A','C', 'E']),
		#diff_glm_subcluster = 'diff_testing/{combination}__{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__{dims}__{dist}__knn-{knn}__{neighbors}.G.SC.diff.coef_table.Rdata',
		#marker_monocle = expand('diff_test/{{combination}}__n_spec_genes-{n_spec_genes}__n_features{{n_features}}__{transform-{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__dims-{{dims}}__preFilter.scEiaD__dist{{dist}}__nneighbors{{neighbors}}__{group}.monocleTopMarker.Rdata', \
		#			group = ['seuratCluster','CellType_predict']),
		#against = 'pseudoBulk_DGE/merge/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}__knn-{knn}__ABC.Rdata',
		#pairwise = 'pseudoBulk_DGE/merge/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__preFilter.scEiaD__dist-{dist}__neighbors-{neighbors}__knn-{knn}__pairwise.Rdata',
		doublet = 'doublet_calls/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}.doublets.Rdata',
		haystack = 'haystack/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__dist-{dist}__neighbors-{neighbors}.haystack.Rdata',
		diff_wilcox = expand('diff_testing/n_features-{{n_features}}__transform-{{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__dims-{{dims}}__knn-{{knn}}__neighbors-{{neighbors}}__dist-{{dist}}__{group}.sceWilcox.Rdata', \
					group = ['CellType_predict','CellType', 'cluster'])
	output:
		uncompressed = 'site/MOARTABLES__anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{dist}-{neighbors}-{knn}.sqlite',
		compressed = 'site/MOARTABLES__anthology_limma{correction}___{n_features}-transform-{transform}-{partition}-{covariate}-{method}-{dims}-{dist}-{neighbors}-{knn}.sqlite.gz'
	params:
		inp = 'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{dist}-{neighbors}-{knn}.sqlite',
		uncompressed = 'site/MOARTABLES__anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{dist}-{neighbors}-{knn}.sqlite'
	threads: 16
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/sqlite_add_diff_tables.R {params.inp} \
			{input.diff_wilcox} \
			{input.doublet} \
			{input.haystack} 
		pigz -c -p {threads} {params.inp} > {output.compressed}
		mv {input.sqlite} {params.uncompressed}
		"""

#rule sqlite_add_haystack:

rule make_PLAE_objs:
	input:
		sqlite = 'site/MOARTABLES__anthology_limmaFALSE___' + config['n_features'] + '-counts-universe-batch-scVIprojectionSO-' + config['dims'] + '-' + config['dist'] + '-' + config['neighbors'] + '-' + config['knn'] + '.sqlite',
		raw_obj = "seurat_obj/raw/n_features-1000__transform-counts__partition-raw__covariate-batch__preFilter.seuratV3.Rdata",
		umapFilterPred = 'umap/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaD__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '.umapFilter.predictions.Rdata',
		umapFilter = 'umap/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaD__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '.umapFilter.Rdata',
		seurat_umap = 'seurat_obj/integrated/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaDMA__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '.umap.Rdata',
		cluster = 'cluster/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaD__knn-' + config['knn'] + '.cluster.Rdata', 
		seurat = 'seurat_obj/integrated/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaD.seuratV3.Rdata',
		#a1_obj = 'pseudoBulk_DGE/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaD__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '__knn-' + config['knn'] + '__A1__edgeR_obj.Rdata',
		#b1_obj = 'pseudoBulk_DGE/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaD__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '__knn-' + config['knn'] + '__B1__edgeR_obj.Rdata',
		#c1_obj = 'pseudoBulk_DGE/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojectionSO__dims-' + config['dims'] + '__preFilter.scEiaD__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '__knn-' + config['knn'] + '__C1__edgeR_obj.Rdata',
	output:
		'site/scEiaD_all_seurat_v3.Rdata',
		#'site/scEiaD_well_seurat_v3.Rdata',
		'site/counts_unfiltered.Rdata',
		'site/counts.Rdata'
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/output_objs_for_plae.R \
			{input.seurat_umap} \
			{input.seurat} \
			{input.umapFilterPred} \
			{input.cluster} \
			{input.raw_obj} \
			{input.sqlite}
		Rscript {git_dir}/src/seurat_to_h5ad_core.R site/scEiaD_all_seurat_v3.Rdata scEiaD_droplet site/scEiaD_all_anndata.h5ad make_mini_split_data

		Rscript {git_dir}/src/build_QC_stats.R {input.umapFilter} {input.umapFilterPred} site/counts_unfiltered.Rdata
		"""


