import pprint
pp = pprint.PrettyPrinter(width=41, compact=True)
import subprocess as sp
import tempfile
import yaml
import json
import string
import itertools
import time

git_dir = config['git_dir']
bustools_path = config['bustools_path']
working_dir = config['working_dir']
conda_dir = config['conda_dir']
fastq_path = config['fastq_path']
fi_tsne_dir = config['fi_tsne_dir']
quant_path = config['quant_path']
config_abspath=config['config_abspath']

dist = [0.001,0.1,0.2,0.3]
method = ['bbknn','insct','magic', 'scVI','scVIprojection','scVIprojectionSO','CCA', 'scanorama', 'harmony', 'fastMNN', 'combat', 'none', 'liger']
transform = ['libSize', 'sqrt', 'counts','standard', 'SCT','scran']
covariate = ['study_accession', 'batch']
organism = ['Mus_musculus', 'Macaca_fascicularis', 'Homo_sapiens', 'all']
combination = ['Mus_musculus', 'Mus_musculus_Macaca_fascicularis', 'Mus_musculus_Macaca_fascicularis_Homo_sapiens', 'universe']
dims = [4,6,8,10,15,20,25,30,50,75,100,200]
knn = [0.2,0,4,0.6, 5, 7, 10, 15]
neighbors = [500, 50]
group = ['CellType_predict','cluster','CellType']
model = ['A', 'B', 'C', 'D', 'E', 'F', 'G'] # A is ~seuratCluster+batch+percent.mt and B is ~seuratCluster+batch+percent.mt+organism
wildcard_constraints:
	method = '|'.join(method),
	transform = '|'.join(transform),
	covariate = '|'.join(covariate),
	organism = '|'.join(organism),
	nfeatures = '|'.join([str(x) for x in [2000,3000,4000,5000]]),
	dims = '|'.join([str(x) for x in dims]),
	model = '|'.join(model),	
	dist = '|'.join([str(x) for x in dist]),
	neighbors = '|'.join([str(x) for x in neighbors]),
	group = '|'.join(group)
rule all:
	input:
	#	expand('trajectory_slingshot/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__dist-{dist}__neighbors-{neighbors}__knn-{knn}__traj{organism}.Rdata',
	#		n_features = config['n_features'], \
	#		transform = ['counts'], \
	#		partition = ['universe'], \
	#		covariate = ['batch'], \
	#		method = ['scVIprojection'], \
	#		dims = config['dims'], \
	#		dist = config['dist'], \ 
	#		knn = config['knn'], \
	#		neighbors = config['neighbors'], \
	#		organism = ['Homo_sapiens','Mus_musculus']), 
		'site/scEiaD_all_seurat_v3.Rdata'
	
# take output from SnakePOP
# by output I mean
# scVI model, umap, clustering
# give winner params (from SnakePOP -> scPOP)
# and put in the config.yaml file
ref_samples = config['ref_samples']
pattern_file=config['samplename_patterns']

rule doublet_ID:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__preFilter.seuratV3.Rdata'
	output:
		'pipeline_data/doublet_calls/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}.doublets.Rdata'
	shell:
		"""
		module load R/3.6
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		Rscript {git_dir}/src/doublet_ID.R {input} {output}
		"""

rule calculate_phate:
	input:
		obj = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__preFilter.seuratV3.Rdata'
	output:
		'pipeline_data/phate/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__preFilter.phate.Rdata'
	threads: 16
	shell:
		"""
		module load R/3.6
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		Rscript {git_dir}/src/run_phate.R {input} {output}
		"""

#slingshot trajectory
rule sling:
	input:
		'pipeline_data/cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__knn-{knn}.cluster.Rdata',
		'pipeline_data/umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.umapFilter.predictions.Rdata',
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__preFilter.seuratV3.Rdata'
	output:
		'pipeline_data/trajectory_slingshot/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__knn-{knn}__traj{organism}.Rdata'
	shell:
		"""
		module load R/4.0
		Rscript {git_dir}/src/trajectory_sling.R {input} {wildcards.method} {wildcards.organism} {output}
		"""

rule doublet_filtering:
	input:
		'pipeline_data/xgboost_predictions/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__knn-{knn}__umapPredictions.Rdata',
		'pipeline_data/doublet_calls/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}.doublets.Rdata'
	output:
		'pipeline_data/umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__knn-{knn}.umapFilterPredictions.Rdata'
	shell:
		"""
		module load R/3.6
		Rscript {git_dir}/src/doublet_filtering.R {input} {output}
		"""

# Add back genes that were removed becauase they  only were expressed in 1-2 species
# or the gene name could not be properly matched (and thus *looked* like only in one?)
# we are only doing protein coding for the additions
		
rule add_missing_genes:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__umap.seuratV3.Rdata'
	output:
		missing_quant = 'pipeline_data/clean_quant/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}_dist-{dist}__neighbors-{neighbors}_missing_quant.Rdata',
		full_map = 'pipeline_data/clean_quant/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}_missing_quant_full_map.Rdata',
		seurat = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.umap.Rdata'
	shell:
		"""
		module load R/4.0.3
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		export SCIAD_WORKING_DIR={working_dir}
		Rscript {git_dir}/src/add_all_genes.R {input} {output}
		"""
##################

rule make_sqlite:
	input:
		seurat = 'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.umap.Rdata',
		meta = 'pipeline_data/umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__knn-{knn}.umapFilterPredictions.Rdata',
		cluster = 'pipeline_data/cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__knn-{knn}__cluster.Rdata',
		#well_data =  'well_data_seurat_obj_labelled.Rdata',
		phate = 'pipeline_data/phate/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__preFilter.phate.Rdata'
	params:
		'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite'
	output:
		'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite'
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/make_sqlite.R \
			{input.seurat} \
			{input.meta} \
			{input.cluster} \
			{input.phate} \
			{output} \
			{wildcards.correction}
		#pigz -p 32 {params}
		"""

rule haystack:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.umap.Rdata'	
	output:
		'pipeline_data/haystack/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.haystack.Rdata'
	shell:
		"""
		mkdir -p haystack
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/haystack.R \
			{input} \
			max \
			{output}
		"""

rule diff_test_wilcox:
	input:
		'seurat_obj/integrated/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.umap.Rdata',
		'pipeline_data/cluster/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__knn-{knn}__cluster.Rdata',
		'pipeline_data/umap/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__knn-{knn}.umapFilterPredictions.Rdata'
	output:
		'diff_testing/{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{knn}-{neighbors}-{dist}-{group}-{chunk}-{total_chunks}.sceWilcox.Rdata',
		'diff_testing/{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{knn}-{neighbors}-{dist}-{group}-{chunk}-{total_chunks}.sceWilcox_summary.Rdata'
	threads: 2
	shell:
		"""
		module load R/3.6
		Rscript {git_dir}/src/diff_testing_sce_wilcox.R {input} {wildcards.group} {threads} {output} {wildcards.chunk} {wildcards.total_chunks}
		"""

rule combine_diff_test_wilcox:
	input:
		expand('diff_testing/{{n_features}}-{{transform}}-{{partition}}-{{covariate}}-{{method}}-{{dims}}-{{epochs}}-{{knn}}-{{neighbors}}-{{dist}}-{{group}}-{chunk}-{total_chunks}.sceWilcox.Rdata', chunk= list(range(1,21)), total_chunks = 20),
	output:
		'diff_testing/{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{knn}-{neighbors}-{dist}-{group}.sceWilcox.Rdata',
	shell:
		"""
		module load R/3.6
		Rscript {git_dir}/src/diff_testing_sce_wilcox_merge.R {input} {wildcards.group} {output}
		"""

rule sqlite_add_tables:
	input:
		sqlite = 'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite',
		#diff_wilcox = expand('diff_testing/{{combination}}__{{n_features}}__{transform-{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__dims-{{dims}}__neighbors-{{neighbors}}__dist-{{dist}}__{group}.sceWilcox.Rdata', \
		#			group = ['subcluster', 'cluster','CellType_predict','CellType']),
		#diff_glm = expand('diff_testing/{{combination}}__{{n_features}}__{transform-{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__{{dims}}__dist-{{dist}}__{{neighbors}}.{model}.diff.coef_table.Rdata', \
		#			model = ['A','C', 'E']),
		#diff_glm_subcluster = 'diff_testing/{combination}__{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__{dims}__{dist}__knn-{knn}__{neighbors}.G.SC.diff.coef_table.Rdata',
		#marker_monocle = expand('diff_test/{{combination}}__n_spec_genes-{n_spec_genes}__n_features{{n_features}}__{transform-{transform}}__partition-{{partition}}__covariate-{{covariate}}__method-{{method}}__dims-{{dims}}__dist{{dist}}__nneighbors{{neighbors}}__{group}.monocleTopMarker.Rdata', \
		#			group = ['seuratCluster','CellType_predict']),
		#against = 'pseudoBulk_DGE/merge/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__knn-{knn}__ABC.Rdata',
		#pairwise = 'pseudoBulk_DGE/merge/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}__knn-{knn}__pairwise.Rdata',
		doublet = 'pipeline_data/doublet_calls/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}.doublets.Rdata',
		#haystack = 'pipeline_data/haystack/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.haystack.Rdata',
		diff_wilcox = expand('diff_testing/{{n_features}}-{{transform}}-{{partition}}-{{covariate}}-{{method}}-{{dims}}-{{epochs}}-{{knn}}-{{neighbors}}-{{dist}}-{group}.sceWilcox.Rdata', \
					group = ['CellType_predict','CellType', 'cluster'])
	output:
		uncompressed = 'site/MOARTABLES__anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite',
		compressed = 'site/MOARTABLES__anthology_limma{correction}___{n_features}-transform-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite.gz'
	params:
		inp = 'site/anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite',
		uncompressed = 'site/MOARTABLES__anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite'
	threads: 16
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/sqlite_add_diff_tables.R {params.inp} \
			{input.diff_wilcox} \
			{input.doublet} 
		pigz -c -p {threads} {params.inp} > {output.compressed}
		mv {input.sqlite} {params.uncompressed}
		"""

rule sqlite_add_haystack:
	input:
		'site/MOARTABLES__anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.sqlite',
		'pipeline_data/haystack/n_features-{n_features}__transform-{transform}__partition-{partition}__covariate-{covariate}__method-{method}__dims-{dims}__epochs-{epochs}__dist-{dist}__neighbors-{neighbors}.haystack.Rdata'
	output:
		'site/MOARTABLES__anthology_limma{correction}___{n_features}-{transform}-{partition}-{covariate}-{method}-{dims}-{epochs}-{dist}-{neighbors}-{knn}.haystack.sqlite'
	shell:
		"""
		module load R/3.6
		Rscript {git_dir}/src/sqlite_add_haystack.R {input}
		mv {input} {output}
		"""

rule make_PLAE_objs:
	input:
		sqlite = 'site/MOARTABLES__anthology_limmaFALSE___' + config['n_features'] + '-counts-universe-batch-scVIprojection-' + config['dims'] + '-' + config['epochs'] + '-' + config['dist'] + '-' + config['neighbors'] + '-' + config['knn'] + '.sqlite',
		raw_obj = "seurat_obj/raw/n_features-1000__transform-counts__partition-raw__covariate-batch__preFilter.seuratV3.Rdata",
		umapFilterPred = 'pipeline_data/umap/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojection__dims-' + config['dims'] + '__epochs-' + config['epochs'] + '__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '__knn-' + config['knn'] + '.umapFilterPredictions.Rdata',
		seurat_umap = 'seurat_obj/integrated/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojection__dims-' + config['dims'] + '__epochs-' + config['epochs'] + '__dist-' + config['dist'] + '__neighbors-' + config['neighbors'] + '.umap.Rdata',
		cluster = 'pipeline_data/cluster/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojection__dims-' + config['dims'] + '__epochs-' + config['epochs'] + '__knn-' + config['knn'] + '__cluster.Rdata', 
		seurat = 'seurat_obj/integrated/n_features-' + config['n_features'] + '__transform-counts__partition-universe__covariate-batch__method-scVIprojection__dims-' + config['dims'] + '__epochs-' + config['epochs'] + '__preFilter.seuratV3.Rdata',
	output:
		'site/scEiaD_all_seurat_v3.Rdata',
		#'site/scEiaD_well_seurat_v3.Rdata',
		'site/counts_unfiltered.Rdata',
		'site/counts.Rdata'
	shell:
		"""
		export SCIAD_CONDA_DIR={conda_dir}
		export SCIAD_GIT_DIR={git_dir}
		export SCIAD_CONFIG={config_abspath}
		module load R/3.6
		Rscript {git_dir}/src/output_objs_for_plae.R \
			{input.seurat_umap} \
			{input.seurat} \
			{input.umapFilterPred} \
			{input.cluster} \
			{input.raw_obj} \
			{input.sqlite}
		Rscript {git_dir}/src/seurat_to_h5ad_core.R site/scEiaD_all_seurat_v3.Rdata scEiaD_droplet site/scEiaD_all_anndata.h5ad make_mini_split_data

		Rscript {git_dir}/src/build_QC_stats.R {input.umapFilterPred} site/counts_unfiltered.Rdata
		"""


